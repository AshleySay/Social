{"ast":null,"code":"var _jsxFileName = \"/home/ashley/Desktop/Social-master/frontend/src/components/SyllableCount.js\";\nimport React from 'react';\n\nasync function getSylCount(word) {\n  let response = await fetch(`https://api.datamuse.com/words?sp=${word}&md=s&max=1`);\n  let data = response.json;\n  return data;\n}\n\nexport default function SyllableCount(props) {\n  const regex = /[a-zA-Z]+\\b/gm;\n  let str = props.string;\n  let m;\n  let array = [];\n\n  while ((m = regex.exec(str)) !== null) {\n    if (m.index === regex.lastIndex) {\n      regex.lastIndex++;\n    }\n\n    for (const entry of m) {} // m.forEach((match, groupIndex) => {\n    //     fetch(`https://api.datamuse.com/words?sp=${match}&md=s&max=1`, {\n    //     \"method\": \"GET\"\n    //     })\n    //     .then(response => response.json())\n    //     .then(data => {\n    //         array.push(parseInt(data[0].numSyllables))\n    //     })\n    //     .catch(err => {\n    //         console.log(err)\n    //     });\n    // });\n\n  }\n\n  let sum = array.reduce((a, b) => a + b, 0);\n  console.log(sum);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, sum);\n}","map":{"version":3,"sources":["/home/ashley/Desktop/Social-master/frontend/src/components/SyllableCount.js"],"names":["React","getSylCount","word","response","fetch","data","json","SyllableCount","props","regex","str","string","m","array","exec","index","lastIndex","entry","sum","reduce","a","b","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAeC,WAAf,CAA2BC,IAA3B,EAAiC;AAC7B,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCF,IAAK,aAA3C,CAA1B;AACA,MAAIG,IAAI,GAAGF,QAAQ,CAACG,IAApB;AACA,SAAOD,IAAP;AACH;;AAED,eAAe,SAASE,aAAT,CAAwBC,KAAxB,EAA+B;AAE9C,QAAMC,KAAK,GAAG,eAAd;AACA,MAAIC,GAAG,GAAGF,KAAK,CAACG,MAAhB;AACA,MAAIC,CAAJ;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,SAAO,CAACD,CAAC,GAAGH,KAAK,CAACK,IAAN,CAAWJ,GAAX,CAAL,MAA0B,IAAjC,EAAuC;AACnC,QAAIE,CAAC,CAACG,KAAF,KAAYN,KAAK,CAACO,SAAtB,EAAiC;AAC7BP,MAAAA,KAAK,CAACO,SAAN;AACH;;AAGL,SAAK,MAAMC,KAAX,IAAoBL,CAApB,EAAuB,CAEtB,CARsC,CAUvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACC;;AACD,MAAIM,GAAG,GAAGL,KAAK,CAACM,MAAN,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA3B,EAA8B,CAA9B,CAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,GAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,GAAN,CADJ;AAGC","sourcesContent":["import React from 'react'\n\nasync function getSylCount(word) {\n    let response = await fetch(`https://api.datamuse.com/words?sp=${word}&md=s&max=1`)\n    let data = response.json\n    return data\n}\n\nexport default function SyllableCount (props) {\n\nconst regex = /[a-zA-Z]+\\b/gm;\nlet str = props.string;\nlet m\nlet array = []\nwhile ((m = regex.exec(str)) !== null) {\n    if (m.index === regex.lastIndex) {\n        regex.lastIndex++;\n    }\n\n\nfor (const entry of m) {\n    \n}\n\n// m.forEach((match, groupIndex) => {\n//     fetch(`https://api.datamuse.com/words?sp=${match}&md=s&max=1`, {\n//     \"method\": \"GET\"\n//     })\n//     .then(response => response.json())\n//     .then(data => {\n//         array.push(parseInt(data[0].numSyllables))\n//     })\n//     .catch(err => {\n//         console.log(err)\n//     });\n// });\n}\nlet sum = array.reduce((a, b) => a + b, 0)\nconsole.log(sum)\nreturn (\n    <div>{sum}</div>\n)\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"export default function SyllableCount(props) {\n  const regex = /[a-zA-Z]+\\b/gm;\n  let m;\n  let array = [];\n\n  while ((m = regex.exec(str)) !== null) {\n    if (m.index === regex.lastIndex) {\n      regex.lastIndex++;\n    }\n\n    m.forEach((match, groupIndex) => {\n      fetch(`https://api.datamuse.com/words?sp=${match}&md=s&max=1`, {\n        \"method\": \"GET\"\n      }).then(response => response.json()).then(data => {\n        let completeArray = array.push(parseInt(data[0].numSyllables));\n        return completeArray;\n      }).catch(err => {\n        return console.log(err);\n      });\n    });\n  }\n}","map":{"version":3,"sources":["/home/ashley/Desktop/Social-master/frontend/src/components/SyllableCount.js"],"names":["SyllableCount","props","regex","m","array","exec","str","index","lastIndex","forEach","match","groupIndex","fetch","then","response","json","data","completeArray","push","parseInt","numSyllables","catch","err","console","log"],"mappings":"AAAA,eAAe,SAASA,aAAT,CAAwBC,KAAxB,EAA+B;AAE9C,QAAMC,KAAK,GAAG,eAAd;AAEA,MAAIC,CAAJ;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,SAAO,CAACD,CAAC,GAAGD,KAAK,CAACG,IAAN,CAAWC,GAAX,CAAL,MAA0B,IAAjC,EAAuC;AACnC,QAAIH,CAAC,CAACI,KAAF,KAAYL,KAAK,CAACM,SAAtB,EAAiC;AAC7BN,MAAAA,KAAK,CAACM,SAAN;AACH;;AACLL,IAAAA,CAAC,CAACM,OAAF,CAAU,CAACC,KAAD,EAAQC,UAAR,KAAuB;AAC7BC,MAAAA,KAAK,CAAE,qCAAoCF,KAAM,aAA5C,EAA0D;AAC/D,kBAAU;AADqD,OAA1D,CAAL,CAGCG,IAHD,CAGMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHlB,EAICF,IAJD,CAIMG,IAAI,IAAI;AACV,YAAIC,aAAa,GAAGb,KAAK,CAACc,IAAN,CAAWC,QAAQ,CAACH,IAAI,CAAC,CAAD,CAAJ,CAAQI,YAAT,CAAnB,CAApB;AACA,eAAOH,aAAP;AACH,OAPD,EAQCI,KARD,CAQOC,GAAG,IAAI;AACV,eAAOC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAP;AACH,OAVD;AAWH,KAZD;AAaC;AACA","sourcesContent":["export default function SyllableCount (props) {\n\nconst regex = /[a-zA-Z]+\\b/gm;\n\nlet m\nlet array = []\nwhile ((m = regex.exec(str)) !== null) {\n    if (m.index === regex.lastIndex) {\n        regex.lastIndex++;\n    }\nm.forEach((match, groupIndex) => {\n    fetch(`https://api.datamuse.com/words?sp=${match}&md=s&max=1`, {\n    \"method\": \"GET\"\n    })\n    .then(response => response.json())\n    .then(data => {\n        let completeArray = array.push(parseInt(data[0].numSyllables))\n        return completeArray\n    })\n    .catch(err => {\n        return console.log(err)\n    });\n});\n}\n}"]},"metadata":{},"sourceType":"module"}
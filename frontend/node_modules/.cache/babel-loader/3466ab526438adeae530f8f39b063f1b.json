{"ast":null,"code":"var _jsxFileName = \"/home/ashley/Desktop/Social-master/frontend/src/components/SyllableCount.js\";\nimport React from 'react';\n\nasync function logit(entry) {\n  let response = await fetch(`https://api.datamuse.com/words?sp=${entry}&md=s&max=1`, {\n    \"method\": \"GET\"\n  });\n  let data = await response.json();\n  let syllables = await data[0].numSyllables;\n  console.log(sy);\n  return syllables;\n}\n\nexport default function SyllableCount(props) {\n  const regex = /[a-zA-Z]+\\b/gm;\n  let str = props.string;\n  let m;\n  let array = [];\n\n  while ((m = regex.exec(str)) !== null) {\n    if (m.index === regex.lastIndex) {\n      regex.lastIndex++;\n    }\n\n    for (const entry of m) {\n      let word = logit(entry).then(value => value); //array.push(word)\n    }\n  }\n\n  let sum = array.reduce((a, b) => a + b, 0);\n  console.log(sum);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, sum);\n}","map":{"version":3,"sources":["/home/ashley/Desktop/Social-master/frontend/src/components/SyllableCount.js"],"names":["React","logit","entry","response","fetch","data","json","syllables","numSyllables","console","log","sy","SyllableCount","props","regex","str","string","m","array","exec","index","lastIndex","word","then","value","sum","reduce","a","b"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAeC,KAAf,CAAqBC,KAArB,EAA4B;AACxB,MAAIC,QAAQ,GAAG,MAAMC,KAAK,CAAE,qCAAoCF,KAAM,aAA5C,EAA0D;AAAE,cAAW;AAAb,GAA1D,CAA1B;AACA,MAAIG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAjB;AACA,MAAIC,SAAS,GAAG,MAAMF,IAAI,CAAC,CAAD,CAAJ,CAAQG,YAA9B;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ;AACA,SAAOJ,SAAP;AACH;;AAGD,eAAe,SAASK,aAAT,CAAwBC,KAAxB,EAA+B;AAE1C,QAAMC,KAAK,GAAG,eAAd;AACA,MAAIC,GAAG,GAAGF,KAAK,CAACG,MAAhB;AACA,MAAIC,CAAJ;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,SAAO,CAACD,CAAC,GAAGH,KAAK,CAACK,IAAN,CAAWJ,GAAX,CAAL,MAA0B,IAAjC,EAAuC;AACnC,QAAIE,CAAC,CAACG,KAAF,KAAYN,KAAK,CAACO,SAAtB,EAAiC;AAC7BP,MAAAA,KAAK,CAACO,SAAN;AACH;;AAEL,SAAK,MAAMnB,KAAX,IAAoBe,CAApB,EAAuB;AACnB,UAAIK,IAAI,GAAGrB,KAAK,CAACC,KAAD,CAAL,CAAaqB,IAAb,CAAkBC,KAAK,IAAIA,KAA3B,CAAX,CADmB,CAEnB;AACH;AAEA;;AACD,MAAIC,GAAG,GAAGP,KAAK,CAACQ,MAAN,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA3B,EAA8B,CAA9B,CAAV;AACAnB,EAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,GAAN,CADJ;AAGH","sourcesContent":["import React from 'react'\n\nasync function logit(entry) {\n    let response = await fetch(`https://api.datamuse.com/words?sp=${entry}&md=s&max=1`, { \"method\" : \"GET\"})\n    let data = await response.json()\n    let syllables = await data[0].numSyllables\n    console.log(sy)\n    return syllables\n}\n\n\nexport default function SyllableCount (props) {\n\n    const regex = /[a-zA-Z]+\\b/gm;\n    let str = props.string;\n    let m\n    let array = []\n    while ((m = regex.exec(str)) !== null) {\n        if (m.index === regex.lastIndex) {\n            regex.lastIndex++;\n        }\n\n    for (const entry of m) {\n        let word = logit(entry).then(value => value)\n        //array.push(word)\n    }\n\n    }\n    let sum = array.reduce((a, b) => a + b, 0)\n    console.log(sum)\n    return (\n        <div>{sum}</div>\n    )\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/ashley/Desktop/Social-master/frontend/src/components/SyllableCount.js\";\nimport React from 'react';\nexport default function SyllableCount(props) {\n  console.log(props);\n  const regex = /[a-zA-Z]+\\b/gm;\n  let str = props.string;\n  let m;\n  let array = [];\n  let corn;\n\n  while ((m = regex.exec(str)) !== null) {\n    if (m.index === regex.lastIndex) {\n      regex.lastIndex++;\n    }\n\n    corn = m.forEach((match, groupIndex) => {\n      fetch(`https://api.datamuse.com/words?sp=${match}&md=s&max=1`, {\n        \"method\": \"GET\"\n      }).then(response => response.json()).then(data => {\n        array.push(parseInt(data[0].numSyllables));\n      }).catch(err => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }\n        }, \"Error\");\n      });\n    });\n  }\n\n  console.log(corn);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 1\n    }\n  }, corn);\n}","map":{"version":3,"sources":["/home/ashley/Desktop/Social-master/frontend/src/components/SyllableCount.js"],"names":["React","SyllableCount","props","console","log","regex","str","string","m","array","corn","exec","index","lastIndex","forEach","match","groupIndex","fetch","then","response","json","data","push","parseInt","numSyllables","catch","err"],"mappings":";AAAC,OAAOA,KAAP,MAAkB,OAAlB;AAED,eAAe,SAASC,aAAT,CAAwBC,KAAxB,EAA+B;AAE9CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,KAAK,GAAG,eAAd;AACA,MAAIC,GAAG,GAAGJ,KAAK,CAACK,MAAhB;AACA,MAAIC,CAAJ;AACA,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,IAAJ;;AACA,SAAO,CAACF,CAAC,GAAGH,KAAK,CAACM,IAAN,CAAWL,GAAX,CAAL,MAA0B,IAAjC,EAAuC;AACnC,QAAIE,CAAC,CAACI,KAAF,KAAYP,KAAK,CAACQ,SAAtB,EAAiC;AAC7BR,MAAAA,KAAK,CAACQ,SAAN;AACH;;AACLH,IAAAA,IAAI,GAAGF,CAAC,CAACM,OAAF,CAAU,CAACC,KAAD,EAAQC,UAAR,KAAuB;AACpCC,MAAAA,KAAK,CAAE,qCAAoCF,KAAM,aAA5C,EAA0D;AAC/D,kBAAU;AADqD,OAA1D,CAAL,CAGCG,IAHD,CAGMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHlB,EAICF,IAJD,CAIMG,IAAI,IAAI;AACVZ,QAAAA,KAAK,CAACa,IAAN,CAAWC,QAAQ,CAACF,IAAI,CAAC,CAAD,CAAJ,CAAQG,YAAT,CAAnB;AACH,OAND,EAOCC,KAPD,CAOOC,GAAG,IAAI;AACV,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ;AAGH,OAXD;AAYH,KAbM,CAAP;AAcC;;AACDvB,EAAAA,OAAO,CAACC,GAAR,CAAYM,IAAZ;AACA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,IAAN,CADA;AAGC","sourcesContent":[" import React from 'react'\n\nexport default function SyllableCount (props) {\n\nconsole.log(props)\nconst regex = /[a-zA-Z]+\\b/gm;\nlet str = props.string;\nlet m\nlet array = []\nlet corn;\nwhile ((m = regex.exec(str)) !== null) {\n    if (m.index === regex.lastIndex) {\n        regex.lastIndex++;\n    }\ncorn = m.forEach((match, groupIndex) => {\n    fetch(`https://api.datamuse.com/words?sp=${match}&md=s&max=1`, {\n    \"method\": \"GET\"\n    })\n    .then(response => response.json())\n    .then(data => {\n        array.push(parseInt(data[0].numSyllables))\n    })\n    .catch(err => {\n        return (\n            <div>Error</div>\n        )\n    });\n});\n}\nconsole.log(corn)\nreturn (\n<div>{corn}</div>\n)\n}"]},"metadata":{},"sourceType":"module"}
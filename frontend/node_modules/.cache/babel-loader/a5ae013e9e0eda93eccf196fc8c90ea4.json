{"ast":null,"code":"var _jsxFileName = \"/home/ashley/Desktop/Social-master/frontend/src/components/SyllableCount.js\";\nimport React from 'react';\n\nasync function logit(entry) {\n  let respone = await fetch(`https://api.datamuse.com/words?sp=${entry}&md=s&max=1`, {\n    \"method\": \"GET\"\n  });\n  let object = response.json().then(response => response.json()).then(data => console.log(data[0].numSyllables));\n}\n\nexport default function SyllableCount(props) {\n  const regex = /[a-zA-Z]+\\b/gm;\n  let str = props.string;\n  let m;\n  let array = [];\n\n  while ((m = regex.exec(str)) !== null) {\n    if (m.index === regex.lastIndex) {\n      regex.lastIndex++;\n    }\n\n    for (const entry of m) {\n      console.log(logit(entry));\n    } // m.forEach((match, groupIndex) => {\n    //     fetch(`https://api.datamuse.com/words?sp=${match}&md=s&max=1`, {\n    //     \"method\": \"GET\"\n    //     })\n    //     .then(response => response.json())\n    //     .then(data => {\n    //         array.push(parseInt(data[0].numSyllables))\n    //     })\n    //     .catch(err => {\n    //         console.log(err)\n    //     });\n    // });\n\n  }\n\n  let sum = array.reduce((a, b) => a + b, 0);\n  console.log(sum);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, sum);\n}","map":{"version":3,"sources":["/home/ashley/Desktop/Social-master/frontend/src/components/SyllableCount.js"],"names":["React","logit","entry","respone","fetch","object","response","json","then","data","console","log","numSyllables","SyllableCount","props","regex","str","string","m","array","exec","index","lastIndex","sum","reduce","a","b"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAeC,KAAf,CAAqBC,KAArB,EAA4B;AACxB,MAAIC,OAAO,GAAG,MAAMC,KAAK,CAAE,qCAAoCF,KAAM,aAA5C,EAA0D;AAAE,cAAW;AAAb,GAA1D,CAAzB;AAEA,MAAIG,MAAM,GAAGC,QAAQ,CAACC,IAAT,GACZC,IADY,CACPF,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADL,EAEZC,IAFY,CAEPC,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAAC,CAAD,CAAJ,CAAQG,YAApB,CAFD,CAAb;AAGH;;AAGD,eAAe,SAASC,aAAT,CAAwBC,KAAxB,EAA+B;AAE1C,QAAMC,KAAK,GAAG,eAAd;AACA,MAAIC,GAAG,GAAGF,KAAK,CAACG,MAAhB;AACA,MAAIC,CAAJ;AACA,MAAIC,KAAK,GAAG,EAAZ;;AACA,SAAO,CAACD,CAAC,GAAGH,KAAK,CAACK,IAAN,CAAWJ,GAAX,CAAL,MAA0B,IAAjC,EAAuC;AACnC,QAAIE,CAAC,CAACG,KAAF,KAAYN,KAAK,CAACO,SAAtB,EAAiC;AAC7BP,MAAAA,KAAK,CAACO,SAAN;AACH;;AAEL,SAAK,MAAMpB,KAAX,IAAoBgB,CAApB,EAAuB;AACnBR,MAAAA,OAAO,CAACC,GAAR,CAAYV,KAAK,CAACC,KAAD,CAAjB;AACH,KAPsC,CAWvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AACC;;AACD,MAAIqB,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAa,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA3B,EAA8B,CAA9B,CAAV;AACAhB,EAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,GAAN,CADJ;AAGH","sourcesContent":["import React from 'react'\n\nasync function logit(entry) {\n    let respone = await fetch(`https://api.datamuse.com/words?sp=${entry}&md=s&max=1`, { \"method\" : \"GET\"})\n\n    let object = response.json()\n    .then(response => response.json())\n    .then(data => console.log(data[0].numSyllables))\n}\n\n\nexport default function SyllableCount (props) {\n\n    const regex = /[a-zA-Z]+\\b/gm;\n    let str = props.string;\n    let m\n    let array = []\n    while ((m = regex.exec(str)) !== null) {\n        if (m.index === regex.lastIndex) {\n            regex.lastIndex++;\n        }\n\n    for (const entry of m) {\n        console.log(logit(entry))\n    }\n\n\n\n    // m.forEach((match, groupIndex) => {\n    //     fetch(`https://api.datamuse.com/words?sp=${match}&md=s&max=1`, {\n    //     \"method\": \"GET\"\n    //     })\n    //     .then(response => response.json())\n    //     .then(data => {\n    //         array.push(parseInt(data[0].numSyllables))\n    //     })\n    //     .catch(err => {\n    //         console.log(err)\n\n    //     });\n    // });\n    }\n    let sum = array.reduce((a, b) => a + b, 0)\n    console.log(sum)\n    return (\n        <div>{sum}</div>\n    )\n}"]},"metadata":{},"sourceType":"module"}